<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>List of posts on Phoenix by Example</title>
    <link>https://phoenixbyexample.com/posts/</link>
    <description>Recent content in List of posts on Phoenix by Example</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 20 Jan 2021 08:51:42 -0500</lastBuildDate>
    
      <atom:link href="https://phoenixbyexample.com/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
      <item>
        <title>Understanding the Tradeoffs with Elixir Typespecs and Dialyzer</title>
        <link>https://phoenixbyexample.com/posts/typespecs-and-dialyzer-tradeoffs/</link>
        <pubDate>Wed, 20 Jan 2021 08:51:42 -0500</pubDate>
        <guid>https://phoenixbyexample.com/posts/typespecs-and-dialyzer-tradeoffs/</guid>
        <description>In today&amp;rsquo;s post I want to start a conversation around the tradeoffs of using Typespecs and Dialyzer use in your Elixir code.
Elixir is a dynamic, not a statically-typed language &amp;ndash; and just to preemptively avoid the programming wars that might ensue, the given type system of a language is not a &amp;ldquo;good&amp;rdquo; or &amp;ldquo;bad&amp;rdquo; attribute by itself, but it will none-the-less influences the code we write.
For those who prefer or come to Elixir from a statically-typed language background you may be interested in learning more about Elixir Typespecs, described in the documentation as follows:</description>
      </item>
    
  </channel>
</rss>
